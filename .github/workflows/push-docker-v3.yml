name: Push Docker Image with VersionNumber V3

on:
  workflow_dispatch:
#   push:
#     branches:
#       - master
#       - main

permissions:
  contents: read

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
    strategy:
      matrix:
        dockerfile:
          - name: regular
            file: Dockerfile
            tag-suffix: ""
          - name: ultra-lite
            file: Dockerfile.ultra-lite
            tag-suffix: "-ultra-lite"
            exclude-branch: main
          - name: fat
            file: Dockerfile.fat
            tag-suffix: "-fat"
            exclude-branch: main

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 17
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: "17"
          distribution: "temurin"

      - uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1
        with:
          gradle-version: 8.12

      - name: Run Gradle Command
        run: ./gradlew clean build
        env:
          DOCKER_ENABLE_SECURITY: false
          STIRLING_PDF_DESKTOP_UI: false

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Get version number
        id: versionNumber
        run: echo "versionNumber=$(./gradlew printVersion --quiet | tail -1)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_API }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Convert repository owner to lowercase
        id: repoowner
        run: echo "lowercase=$(echo ${{ github.repository_owner }} | awk '{print tolower($0)}')" >> $GITHUB_OUTPUT

      - name: Generate tags
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        # if: matrix.dockerfile.exclude-branch != github.ref_name
        with:
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/s-pdf
            ghcr.io/${{ steps.repoowner.outputs.lowercase }}/s-pdf
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}}${{ matrix.dockerfile.tag-suffix }},value=${{ steps.versionNumber.outputs.versionNumber }},enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{major}}.{{minor}}${{ matrix.dockerfile.tag-suffix }},value=${{ steps.versionNumber.outputs.versionNumber }},enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{major}}${{ matrix.dockerfile.tag-suffix }},value=${{ steps.versionNumber.outputs.versionNumber }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest${{ matrix.dockerfile.tag-suffix }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=alpha,enable=${{ github.ref == 'refs/heads/main' && matrix.dockerfile.name == 'regular' }}

      - name: Build and push Dockerfile
        id: build-push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        # if: matrix.dockerfile.exclude-branch != github.ref_name
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ${{ matrix.dockerfile.file }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION_TAG=${{ steps.versionNumber.outputs.versionNumber }}
          platforms: linux/amd64,linux/arm64/v8
          provenance: true
          sbom: true

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Sign images
        # if: github.ref == 'refs/heads/master' && matrix.dockerfile.exclude-branch != github.ref_name
        env:
          DIGEST: ${{ steps.build-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "$TAGS" | tr ',' '\n' | while read -r tag; do
            cosign sign --yes \
              --key ./cosign.key \
              "${tag}@${DIGEST}"
          done
