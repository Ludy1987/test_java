name: Check Properties Files in PR

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    paths:
      - "src/main/resources/messages_*.properties"
  push:
    paths:
      - "src/main/resources/messages_en_GB.properties"

permissions:
  contents: write
  pull-requests: write

jobs:
  check-files:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          path: pr-branch
          fetch-depth: 0

      - name: Checkout main branch
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-branch
          fetch-depth: 0

      - name: Set up Python
        if: github.event_name == 'pull_request_target'
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install GitHub CLI
        if: github.event_name == 'pull_request_target'
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Fetch PR changed files
        if: github.event_name == 'pull_request_target'
        id: fetch-pr-changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching PR changed files..."
          cd pr-branch
          gh pr view ${{ github.event.pull_request.number }} --json files -q ".files[].path" > ../changed_files.txt
          cd ..
          echo $(cat changed_files.txt)
          BRANCH_PATH="pr-branch"
          echo "BRANCH_PATH=${BRANCH_PATH}" >> $GITHUB_ENV
          CHANGED_FILES=$(cat changed_files.txt | tr '\n' ' ')
          echo "CHANGED_FILES=${CHANGED_FILES}" >> $GITHUB_ENV
          echo "Changed files: ${CHANGED_FILES}"
          echo "Branch: ${BRANCH_PATH}"

      - name: Determine reference file
        if: github.event_name == 'pull_request_target'
        id: determine-file
        run: |
          echo "Determining reference file..."
          if echo "${{ env.CHANGED_FILES }}" | grep -q 'src/main/resources/messages_en_GB.properties'; then
              echo "REFERENCE_FILE=pr-branch/src/main/resources/messages_en_GB.properties" >> $GITHUB_ENV
          else
              echo "REFERENCE_FILE=main-branch/src/main/resources/messages_en_GB.properties" >> $GITHUB_ENV
          fi
          echo "REFERENCE_FILE=${{ env.REFERENCE_FILE }}"

      - name: Show REFERENCE_FILE
        if: github.event_name == 'pull_request_target'
        run: echo "Reference file is set to ${{ env.REFERENCE_FILE }}"

      - name: Run Python script to check files
        if: github.event_name == 'pull_request_target'
        id: run-check
        run: |
          python main-branch/.github/scripts/check_language_files.py --reference-file ${{ env.REFERENCE_FILE }} --branch ${{ env.BRANCH_PATH }} --files ${{ env.CHANGED_FILES }} > failure.txt || true

      - name: Capture output
        if: github.event_name == 'pull_request_target'
        id: capture-output
        run: |
          if [ -f failure.txt ] && [ -s failure.txt ]; then
            echo "Test failed, capturing output..."
            ERROR_OUTPUT=$(cat failure.txt)
            echo "ERROR_OUTPUT<<EOF" >> $GITHUB_ENV
            echo "$ERROR_OUTPUT" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            echo $ERROR_OUTPUT
          else
            echo "No errors found."
            echo "ERROR_OUTPUT=" >> $GITHUB_ENV
          fi

      - name: Post comment on PR
        if: github.event_name == 'pull_request_target' && env.ERROR_OUTPUT != ''
        uses: actions/github-script@v7
        with:
          script: |
            const { GITHUB_REPOSITORY, ERROR_OUTPUT } = process.env;
            const [repoOwner, repoName] = GITHUB_REPOSITORY.split('/');
            const prNumber = context.issue.number;
            await github.rest.issues.createComment({
              owner: repoOwner,
              repo: repoName,
              issue_number: prNumber,
              body: `## Translation Verification Summary\n\n\n${ERROR_OUTPUT}\n`
            });

  update-translations-main:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: github.event_name == 'push'
        uses: actions/checkout@v4

      - name: Set up Python
        if: github.event_name == 'push'
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Run Python script to check files
        if: github.event_name == 'pull_request_target'
        id: run-check
        run: |
          python main-branch/.github/scripts/check_language_files.py --reference-file src/main/resources/messages_en_GB.properties --branch main --files

      - name: Set up git config
        if: github.event_name == 'push'
        run: |
          git config --global user.email "GitHub Action <action@github.com>"
          git config --global user.name "GitHub Action <action@github.com>"

      - name: Add translation keys
        if: github.event_name == 'push'
        run: |
          git add src/main/resources/messages_*.properties
          git diff --staged --quiet || echo "CHANGES_DETECTED=true" >> $GITHUB_ENV

      - name: Create Pull Request
        id: cpr
        if: env.CHANGES_DETECTED == 'true' && github.event_name == 'push'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update translation files"
          committer: GitHub Action <action@github.com>
          author: GitHub Action <action@github.com>
          signoff: true
          branch: update-translation-files
          title: "Update translation files"
          body: |
            Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: Translation
          draft: false
          delete-branch: true
