name: License Report Workflow

on:
  push:
    branches:
      - main
    # paths:
    #   - "build.gradle"
  pull_request_target:
    paths:
      - "build.gradle"

permissions:
  contents: read

jobs:
  generate-license-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 17
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: "17"
          distribution: "adopt"

      - uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # v4.2.2

      - name: Run Gradle Command
        run: ./gradlew clean generateLicenseReport

      - name: Move and Rename License File
        run: |
          mv build/reports/dependency-license/index.json src/main/resources/static/3rdPartyLicenses.json

      - name: Set up git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run git add
        run: |
          git add src/main/resources/static/3rdPartyLicenses.json
          git diff --staged --quiet || echo "CHANGES_DETECTED=true" >> $GITHUB_ENV

      - name: Create Pull Request
        id: cpr
        if: env.CHANGES_DETECTED == 'true'
        uses: peter-evans/create-pull-request@v7.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update 3rd Party Licenses"
          committer: GitHub Action <action@github.com>
          author: GitHub Action <action@github.com>
          signoff: true
          base: main
          branch: update-3rd-party-licenses
          title: "Update 3rd Party Licenses"
          body: |
            Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: licenses,github-actions
          draft: false
          delete-branch: true
          sign-commits: true

      - run: echo ${{ steps.cpr.outputs.pull-request-operation }}

      - name: Set PR Number as Output
        run: echo "PR_NUMBER=${{ steps.cpr.outputs.pull-request-number }}" >> $GITHUB_ENV

      - name: Squash Merge PR
        run: |
          PR_NUMBER=${{ steps.cpr.outputs.pull-request-number }} # Verwende die PR-Nummer, die im vorherigen Job festgelegt wurde
          if [ -n "$PR_NUMBER" ]; then
            gh pr merge $PR_NUMBER --squash --delete-branch --admin
            echo "PR #$PR_NUMBER merged successfully."
          else
            echo "No open PR found to merge."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - run: echo ${{ github.event.action }}

      # - name: Auto approve
      #   if: steps.cpr.outputs.pull-request-operation == 'created' || steps.cpr.outputs.pull-request-operation == 'updated'
      #   run: gh pr review --approve "${{ steps.cpr.outputs.pull-request-number }}"
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   continue-on-error: true

      # - name: Wait for status check to pass
      #   run: |
      #     gh pr checks update-3rd-party-licenses
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   continue-on-error: true

      # - name: Enable auto-merge
      #   if: steps.cpr.outputs.pull-request-operation == 'created' || steps.cpr.outputs.pull-request-operation == 'updated'
      #   run: |
      #     gh api \
      #     --method POST \
      #     -H "Accept: application/vnd.github+json" \
      #     -H "X-GitHub-Api-Version: 2022-11-28" \
      #     /repos/${{ github.repository }}/merges \
      #     -f "base=main" -f "head=update-3rd-party-licenses" -f "commit_message=Shipped cool_feature!"
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
