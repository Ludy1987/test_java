name: Deploy Javadoc

env:
  PIP_CACHE_DIR: .pip # Configure the PIP cache directory
  DOCUMENTATIONS_BRANCH: test_java # Configure the documentations branch, which you will use for Github pages

permissions:
  contents: write
  packages: write
  actions: read

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main

jobs:
  build-push:
    name: "Build & Push docs"
    runs-on: ubuntu-latest
    
    steps:

    # Checkout source code
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    # Cache dependencies for faster build time in future
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ./.pip
        key: ${{ runner.os }}-modules-${{ hashFiles('./mkdocs-pip.txt') }}
        
    # Install dependencies for build process
    - name: Install build dependencies
      run: |
        pip install -IU -r mkdocs-pip.txt

    # Build docs
    - name: Build documentations
      run: |
        mkdocs build

    # Configure Git informations
    - name: Configure Git informations
      run: |
        git config --global user.name $GITHUB_ACTOR
        git config --global user.email $GITHUB_ACTOR@users.noreply.github.com

    # Synchronize & push into docs branch
    - name: Synchronize & push into docs branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        DEPLOY_BRANCH=$DOCUMENTATIONS_BRANCH
        GIT_COMMIT=$(git rev-parse --short HEAD)

        # Move .git directory to a temporary location
        mv .git ../.git_temp
        mkdir RELEASE
        mv ../.git_temp RELEASE/.git
        cd RELEASE

        echo "Checking out $DEPLOY_BRANCH"
        git checkout $DEPLOY_BRANCH || git checkout -b $DEPLOY_BRANCH
        git pull origin $DEPLOY_BRANCH --rebase -X theirs || echo "Docs branch synced"

        # Move .git directory back
        mv .git ../.git_temp
        mv ../.git_temp .git
        cd ..

        # Push build into the docs branch
        mv site BUILD # Change 'docs-build' to 'site' if that's your build directory
        echo "Pushing build $GIT_COMMIT to $DEPLOY_BRANCH"
        mv .git BUILD/.git
        cd BUILD
        git add -A
        git commit -m "Automated documentation build $GIT_COMMIT"
        git push origin $DEPLOY_BRANCH
        cd ..
