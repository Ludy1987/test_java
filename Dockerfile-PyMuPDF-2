# Build Stage
FROM alpine:3.20.2 AS build

# Install build dependencies
RUN apk upgrade --no-cache -a && \
    apk add --no-cache \
    python3 \
    py3-pip \
    musl-dev \
    jpeg-dev \
    zlib-dev \
    freetype-dev \
    clang \
    clang-dev \
    llvm \
    m4 \
    cmake \
    python3-dev \
    build-base \
    swig \
    git \
    wget \
    bash

ENV VERSION=1.24.9

WORKDIR /tmp

# Install PyMuPDF
RUN pip install --break-system-packages libclang && \
    wget https://github.com/pymupdf/PyMuPDF/archive/refs/tags/$VERSION.tar.gz && \
    tar -xvf $VERSION.tar.gz && \
    cd PyMuPDF-$VERSION && \
    PYMUPDF_SETUP_MUPDF_TESSERACT=0 python3 setup.py install

# Prepare Final Image
FROM alpine:3.20.2

# Copy necessary files from build stage
COPY --from=build /usr/local/lib/python3.12/site-packages/ /usr/local/lib/python3.12/site-packages/
COPY --from=build /usr/local/bin/ /usr/local/bin/
COPY --from=build /usr/lib/python3.12/ /usr/lib/python3.12/
COPY --from=build /usr/include/python3.12/ /usr/include/python3.12/

# Install runtime dependencies
RUN apk upgrade --no-cache -a && \
    apk add --no-cache \
        ca-certificates \
        tzdata \
        tini \
        bash \
        curl \
        shadow \
        su-exec \
        openssl \
        openssl-dev \
        openjdk21-jre \
        libreoffice \
        poppler-utils \
        ocrmypdf \
        tesseract-ocr-data-eng \
        py3-opencv \
        python3 \
        py3-pip && \
    pip install --break-system-packages --no-cache-dir --upgrade unoconv WeasyPrint && \
    mv /usr/share/tessdata /usr/share/tessdata-original && \
    mkdir -p /home/stirlingpdfuser /configs /logs /customFiles /pipeline/watchedFolders /pipeline/finishedFolders && \
    fc-cache -f -v && \
    addgroup -S stirlingpdfgroup && adduser -S stirlingpdfuser -G stirlingpdfgroup && \
    chown -R stirlingpdfuser:stirlingpdfgroup /home/stirlingpdfuser /scripts /usr/share/fonts/opentype/noto /configs /customFiles /pipeline && \
    tesseract --list-langs

# Copy application files
COPY scripts /scripts
COPY pipeline /pipeline
COPY src/main/resources/static/fonts/*.ttf /usr/share/fonts/opentype/noto/
COPY build/libs/*.jar /app.jar

# Set environment variables
ENV DOCKER_ENABLE_SECURITY=false \
    VERSION_TAG=$VERSION_TAG \
    JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS -XX:MaxRAMPercentage=75" \
    HOME=/home/stirlingpdfuser \
    PUID=1000 \
    PGID=1000 \
    UMASK=022

EXPOSE 8080/tcp

# Set user and run command
ENTRYPOINT ["tini", "--", "/scripts/init.sh"]
CMD ["java", "-Dfile.encoding=UTF-8", "-jar", "/app.jar"]
